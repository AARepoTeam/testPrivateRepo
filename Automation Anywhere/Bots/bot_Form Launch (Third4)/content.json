{"triggers":[],"nodes":[{"uid":"c2b34a25-0c33-4ab3-a4cb-9fe233b07e4b","commandName":"uiFormDisplay","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"alwaysOnTop","value":{"type":"BOOLEAN","boolean":true}}]},{"uid":"6f60b6ce-9c62-41d0-918f-281c78349e55","commandName":"step","packageName":"Step","disabled":false,"children":[{"uid":"67c63d25-7154-4f73-8244-fa2b72b1bb1f","commandName":"step","packageName":"Step","disabled":false,"children":[{"uid":"3ebc4833-4a7d-401d-a107-763697d2c6f7","commandName":"delay","packageName":"Delay","disabled":false,"attributes":[{"name":"delayType","value":{"type":"STRING","string":"REGULAR"}},{"name":"delayTime","value":{"type":"NUMBER","number":"2"}},{"name":"timeUnit","value":{"type":"STRING","string":"SECONDS"}}]},{"uid":"9cff1411-8946-42bb-973a-a43c3f3c3c7c","commandName":"captureWindow","packageName":"Screen","disabled":false,"attributes":[{"name":"windowTitle","value":{"type":"WINDOW","expression":"$window-1$"}},{"name":"filePath","value":{"type":"FILE","string":"file:///D:/Form%20UI%20Testing/actual(third4)_beforeSet.PNG"}},{"name":"isOverwriteFile","value":{"type":"BOOLEAN","boolean":true}}]},{"uid":"59b91d5c-bff4-43d9-9093-531294c92ab6","commandName":"messageBox","packageName":"MessageBox","disabled":false,"attributes":[{"name":"title","value":{"type":"STRING","string":"Automation Anywhere Enterprise Client"}},{"name":"content","value":{"type":"STRING","string":"Temp wait"}},{"name":"scrollLines","value":{"type":"NUMBER","number":"30"}},{"name":"closeMsgBox","value":{"type":"BOOLEAN","boolean":false}}]},{"uid":"e1511a1a-fa2e-45a0-857e-45b0877b40f9","commandName":"python.commands.openScript","packageName":"Python","disabled":false,"attributes":[{"name":"session","value":{"type":"STRING","string":"before set"}},{"name":"scriptOption","value":{"type":"STRING","string":"SCRIPT"}},{"name":"script","value":{"type":"STRING","string":"# import the necessary packages\ndef compare_image():\n    from skimage.metrics import structural_similarity\n    import imutils\n    import cv2\n\n\n    # load the two input images\n    imageA = cv2.imread(r'D:\\Form UI Testing\\sample(third4)_beforeSet.PNG')\n    imageB = cv2.imread(r'D:\\Form UI Testing\\actual(third4)_beforeSet.PNG')\n    # convert the images to grayscale\n    grayA = cv2.cvtColor(imageA, cv2.COLOR_BGR2GRAY)\n    grayB = cv2.cvtColor(imageB, cv2.COLOR_BGR2GRAY)\n\n    # compute the Structural Similarity Index (SSIM) between the two\n    (score, diff) = structural_similarity(grayA, grayB, full=True)\n    diff = (diff * 255).astype(\"uint8\")\n\n    if score<1.0:\n    \n        # threshold the difference image, followed by finding contours to\n        # obtain the regions of the two input images that differ\n        thresh = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]\n        cnts = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n        cnts = imutils.grab_contours(cnts)\n        # loop over the contours\n        for c in cnts:\n            # compute the bounding box of the contour and then draw the\n            # bounding box on both input images to represent where the two\n            # images differ\n            (x, y, w, h) = cv2.boundingRect(c)\n            cv2.rectangle(imageA, (x, y), (x + w, y + h), (0, 0, 255), 2)\n            cv2.rectangle(imageB, (x, y), (x + w, y + h), (0, 0, 255), 2)\n            \n        # show the output images\n        cv2.imshow(\"Expected Image\", imageA)\n        cv2.imshow(\"Actual Image\", imageB)\n        cv2.waitKey(0)\n        return \"False\"\n    return \"True\"\n\ncompare_image()\n"}},{"name":"version","value":{"type":"STRING","string":"3"}}]},{"uid":"12532f22-fe77-46a3-b141-2a8b0a571707","commandName":"python.commands.executeFunction","packageName":"Python","disabled":false,"attributes":[{"name":"session","value":{"type":"STRING","string":"before set"}},{"name":"functionName","value":{"type":"STRING","string":"compare_image"}}]},{"uid":"78133447-f41e-479a-a3cf-a3e6a52ccf01","commandName":"messageBox","packageName":"MessageBox","disabled":false,"attributes":[{"name":"title","value":{"type":"STRING","string":"Automation Anywhere Enterprise Client"}},{"name":"content","value":{"type":"STRING","string":"Temp wait 8"}},{"name":"scrollLines","value":{"type":"NUMBER","number":"30"}},{"name":"closeMsgBox","value":{"type":"BOOLEAN","boolean":false}}]}],"attributes":[{"name":"title","value":{"type":"STRING","string":"Validate before set"}}]},{"uid":"4ef82016-ab70-40a2-9519-5474b64d7e0f","commandName":"step","packageName":"Step","disabled":false,"children":[{"uid":"e9b30dae-0b91-494d-9dd8-b4afcf7fdba8","commandName":"formSetValue","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"formElementId","value":{"type":"FORMELEMENT","formElementId":"Password0","formElementType":"Password"}},{"name":"inputPassword","value":{"type":"STRING","string":"EnteredPassword"}}]},{"uid":"ff6f509e-71fe-4520-8bb5-1391e2c733cd","commandName":"formSetValue","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"formElementId","value":{"type":"FORMELEMENT","formElementId":"RadioButtonGroup0_0","formElementType":"Radio"}},{"name":"inputBoolean","value":{"type":"BOOLEAN","boolean":true}}]},{"uid":"28179531-d369-4da8-ae31-f23c41bdf860","commandName":"formSetValue","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"formElementId","value":{"type":"FORMELEMENT","formElementId":"RadioButtonGroup0_1","formElementType":"Radio"}},{"name":"inputBoolean","value":{"type":"BOOLEAN","boolean":false}}]},{"uid":"79390caf-582f-4fe1-8ab4-d711061a3729","commandName":"formSetValue","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"formElementId","value":{"type":"FORMELEMENT","formElementId":"RichTextEditor0","formElementType":"RichTextEditor"}},{"name":"appendText","value":{"type":"STRING","string":"false"}},{"name":"inputText","value":{"type":"STRING","string":"Some text"}}]},{"uid":"0e79f9f0-448e-4a8f-bd83-81b217a2a4c6","commandName":"formSetValue","packageName":"Forms","disabled":false,"attributes":[{"name":"formVar","value":{"type":"VARIABLE","variableName":"formLaunch"}},{"name":"formElementId","value":{"type":"FORMELEMENT","formElementId":"Snapshot0","formElementType":"Snapshot"}},{"name":"inputText","value":{"type":"STRING","string":"D:\\Form UI Testing\\Repository\\AA Logo.PNG"}}]}],"attributes":[{"name":"title","value":{"type":"STRING","string":"set"}}]},{"uid":"2c753e89-1792-40c0-9121-31d4130b6236","commandName":"delay","packageName":"Delay","disabled":false,"attributes":[{"name":"delayType","value":{"type":"STRING","string":"REGULAR"}},{"name":"delayTime","value":{"type":"NUMBER","number":"2"}},{"name":"timeUnit","value":{"type":"STRING","string":"SECONDS"}}]},{"uid":"3b65d8af-e16c-4a3f-9740-79f68538098c","commandName":"step","packageName":"Step","disabled":false,"children":[{"uid":"e6d643ea-e708-4efe-a71c-935bd5d23e0e","commandName":"captureWindow","packageName":"Screen","disabled":false,"attributes":[{"name":"windowTitle","value":{"type":"WINDOW","expression":"$window-1$"}},{"name":"filePath","value":{"type":"FILE","string":"file:///D:/Form%20UI%20Testing/actual(third4)_afterSet.PNG"}},{"name":"isOverwriteFile","value":{"type":"BOOLEAN","boolean":true}}]},{"uid":"e1212ab4-f4c4-433f-87e1-6fc72456f766","commandName":"python.commands.openScript","packageName":"Python","disabled":false,"attributes":[{"name":"session","value":{"type":"STRING","string":"after set"}},{"name":"scriptOption","value":{"type":"STRING","string":"SCRIPT"}},{"name":"script","value":{"type":"STRING","string":"# import the necessary packages\ndef compare_image():\n    from skimage.metrics import structural_similarity\n    import imutils\n    import cv2\n\n\n    # load the two input images\n    imageA = cv2.imread(r'D:\\Form UI Testing\\sample(third4)_afterSet.PNG')\n    imageB = cv2.imread(r'D:\\Form UI Testing\\actual(third4)_afterSet.PNG')\n    # convert the images to grayscale\n    grayA = cv2.cvtColor(imageA, cv2.COLOR_BGR2GRAY)\n    grayB = cv2.cvtColor(imageB, cv2.COLOR_BGR2GRAY)\n\n    # compute the Structural Similarity Index (SSIM) between the two\n    (score, diff) = structural_similarity(grayA, grayB, full=True)\n    diff = (diff * 255).astype(\"uint8\")\n\n    if score<1.0:\n    \n        # threshold the difference image, followed by finding contours to\n        # obtain the regions of the two input images that differ\n        thresh = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]\n        cnts = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n        cnts = imutils.grab_contours(cnts)\n        # loop over the contours\n        for c in cnts:\n            # compute the bounding box of the contour and then draw the\n            # bounding box on both input images to represent where the two\n            # images differ\n            (x, y, w, h) = cv2.boundingRect(c)\n            cv2.rectangle(imageA, (x, y), (x + w, y + h), (0, 0, 255), 2)\n            cv2.rectangle(imageB, (x, y), (x + w, y + h), (0, 0, 255), 2)\n            \n        # show the output images\n        cv2.imshow(\"Expected Image\", imageA)\n        cv2.imshow(\"Actual Image\", imageB)\n        cv2.waitKey(0)\n        return \"False\"\n    return \"True\"\n\ncompare_image()\n"}},{"name":"version","value":{"type":"STRING","string":"3"}}]},{"uid":"da610aca-6d9b-4ce2-87e6-e94577e6cf15","commandName":"python.commands.executeFunction","packageName":"Python","disabled":false,"attributes":[{"name":"session","value":{"type":"STRING","string":"after set"}},{"name":"functionName","value":{"type":"STRING","string":"compare_image"}}]}],"attributes":[{"name":"title","value":{"type":"STRING","string":"Validate after set"}}]}],"attributes":[{"name":"title","value":{"type":"STRING","string":"Validate"}}]}],"variables":[{"name":"prompt-assignment","description":"A variable you can use for assignments","type":"STRING","subtype":"UNDEFINED","readOnly":false,"input":false,"output":false},{"name":"window-1","description":"","type":"WINDOW","readOnly":true,"input":false,"output":false,"defaultValue":{"type":"WINDOW","window":{"name":"Form title","path":"C:\\Program Files\\Automation Anywhere\\Bot Agent\\jre\\bin\\javaw.exe","class":"GlassWndClass-GlassWindowClass-3","handle":"657450","isChild":false,"location":{"top":87,"left":16},"size":{"height":600,"width":860},"presetType":"NONE","windowType":"NATIVE","browserTabUrl":""}}},{"name":"formLaunch","description":"","type":"FORM","readOnly":false,"input":false,"output":false,"defaultValue":{"type":"FORM","file":{"type":"FILE","string":"repository:///Automation%20Anywhere/Bots/Third4Elements"}}}],"breakpoints":[],"packages":[{"name":"Delay","version":"2.2.0-20201014-042532"},{"name":"Forms","version":"2.18.1-20201215-094115"},{"name":"MessageBox","version":"2.1.0-20201222-125635"},{"name":"Python","version":"2.3.0-20201105-204912"},{"name":"Screen","version":"2.1.0-20201014-043037"},{"name":"Step","version":"2.0.0-20201023-202658"}],"workItemTemplateName":null}